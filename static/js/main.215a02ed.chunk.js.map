{"version":3,"sources":["services/test-api.js","actions/actions.js","components/person-info/PersonInfo.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/app/App.js","reducers/reducer.js","index.js"],"names":["TestApi","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","removePerson","bindId","delete","setClientList","clientList","type","test","mapDispatchToProps","connect","selectedFlat","name","phone","email","initialState","Id","Name","Phone","Email","BindId","useState","open","setOpen","setPerson","handleClose","then","className","Card","sx","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","label","onChange","event","state","target","value","variant","DialogActions","submitPerson","setHouses","houses","setFlats","flats","setSelectedFlat","flat","streets","street","setStreet","house","setHouse","useEffect","findHouses","findFlats","streetName","find","item","houseName","selectHouse","selectStreet","selectFlat","searchOption","map","loading","length","Stack","direction","spacing","Autocomplete","disablePortal","isOptionEqualToValue","option","width","renderOption","props","key","renderInput","params","onSelect","typeName","style","fontWeight","position","top","right","disabled","m","required","result","setStreets","updateStreet","selectedHouse","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.215a02ed.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t'https://dispex.org/api/vtest/HousingStock/clients?addressId=' + adressId\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst res = await axios.delete(\r\n\t\t\t`https://dispex.org/api/vtest/HousingStock/bind_client/${bindId}`\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n}\r\n","const setStreets = (streets) => {\r\n\treturn { type: 'SET_STREETS', streets: streets };\r\n};\r\nconst setHouses = (houses) => {\r\n\treturn { type: 'SET_HOUSES', houses: houses };\r\n};\r\nconst setFlats = (flats) => {\r\n\treturn { type: 'SET_FLATS', flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: 'SET_SELECTED_FLAT', selectedFlat: flat };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: 'SET_CLIENT_LIST', clientList: clientList };\r\n};\r\n\r\nexport { setStreets, setHouses, setFlats, setSelectedFlat, setClientList };\r\n","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport './PersonInfo.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst PersonInfo = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\tbindId,\r\n\tselectedFlat,\r\n\tsetClientList,\r\n}) => {\r\n\tconst initialState = {\r\n\t\tId: 0,\r\n\t\tName: name,\r\n\t\tPhone: phone,\r\n\t\tEmail: email,\r\n\t\tBindId: 0,\r\n\t};\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState(initialState);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetPerson(initialState);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '') {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t\t{phone}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t\t{email}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => removePerson(bindId)}>\r\n\t\t\t\t\t\tУдалить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={() => submitPerson(person)}>Изменить</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonInfo);\r\n","import React from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport PersonInfo from '../person-info/PersonInfo';\r\nimport { Stack, TextField, Autocomplete } from '@mui/material';\r\nimport {\r\n\tsetHouses,\r\n\tsetFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n} from '../../actions/actions';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\n\r\nconst test = new TestApi();\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetHouses,\r\n\tflats,\r\n\tsetFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n}) => {\r\n\tconst [street, setStreet] = useState('');\r\n\tconst [house, setHouse] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tfindHouses(street);\r\n\t\tfindFlats(house);\r\n\t}, [street, house]);\r\n\r\n\tconst findHouses = (streetName) => {\r\n\t\tconst street = streets.find((item) => item.name === streetName);\r\n\t\tif (street) {\r\n\t\t\ttest.getHouses(street.id).then((data) => {\r\n\t\t\t\tsetHouses(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\tif (adressId) {\r\n\t\t\ttest.getAllTenants(adressId).then((res) => {\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst findFlats = (houseName) => {\r\n\t\tconst house = houses.find((item) => item.name === houseName);\r\n\t\tif (house) {\r\n\t\t\ttest.getFlats(house.id).then((data) => {\r\n\t\t\t\tsetFlats(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectHouse = (event) => {\r\n\t\tsetHouse(event.target.value);\r\n\t};\r\n\r\n\tconst selectStreet = (event) => {\r\n\t\tsetStreet(event.target.value);\r\n\t};\r\n\r\n\tconst selectFlat = (event) => {\r\n\t\tconst flat = flats?.find((item) => item.name === event.target.value);\r\n\t\tsetSelectedFlat(flat);\r\n\t\tshowAllPeople(flat?.id);\r\n\t\tif (!flat) {\r\n\t\t\tsetClientList([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchOption = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst loading = streets.length === 0;\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box\"\r\n\t\t\t\t\tisOptionEqualToValue={(option, value) => option.label === value.label}\r\n\t\t\t\t\tloading={loading}\r\n\t\t\t\t\toptions={searchOption}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectStreet} label=\"Улица\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box\"\r\n\t\t\t\t\tisOptionEqualToValue={(option, value) => option.label === value.label}\r\n\t\t\t\t\toptions={houses.map((item) => {\r\n\t\t\t\t\t\treturn { label: item.name, id: item.id };\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectHouse} label=\"Дом\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box\"\r\n\t\t\t\t\tisOptionEqualToValue={(option, value) => option.label === value.label}\r\n\t\t\t\t\toptions={flats.map((item) => {\r\n\t\t\t\t\t\treturn { label: item.name, typeName: item.typeName, id: item.id };\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\tif (options.typeName === 'Квартира') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectFlat} label=\"Квартира\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<h4\r\n\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t>{`Жильцы ${street} ${house} квартира: ${selectedFlat.name} :`}</h4>\r\n\t\t\t) : null}\r\n\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t{clientList.map(({ name, phone, email, bindId }, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PersonInfo\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tbindId={bindId}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tphone={phone}\r\n\t\t\t\t\t\t\temail={email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tstreets,\r\n\thouses,\r\n\tflats,\r\n\tselectedFlat,\r\n\tclientList,\r\n}) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t\tselectedFlat,\r\n\t\tclientList,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetHouses,\r\n\tsetFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst AddPersonModal = ({ selectedFlat, setClientList }) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then((result) => {\r\n\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t});\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest.bindPerson(adressId, personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\tsx={{ position: 'absolute', top: 30, right: 100 }}\r\n\t\t\t\tdisabled={selectedFlat ? false : true}\r\n\t\t\t>\r\n\t\t\t\tДобавить жильца\r\n\t\t\t</Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Ф.И.О\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Телефон\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Phone}\r\n\t\t\t\t\t\tonChange={handleChangePhone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={person.Phone ? false : true}\r\n\t\t\t\t\t\tonClick={() => submitPerson(person)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React, { useEffect } from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../form/Form';\r\nimport { setStreets } from '../../actions/actions';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\n\r\nconst test = new TestApi();\r\n\r\nconst App = ({ setStreets }) => {\r\n\tuseEffect(() => {\r\n\t\tupdateStreet();\r\n\t}, []);\r\n\r\n\tconst updateStreet = () => {\r\n\t\ttest.getStreets().then((data) => {\r\n\t\t\tsetStreets(data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Form />\r\n\t\t\t<AddPersonModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ streets, houses, flats }) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetStreets,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tselectedHouse: null,\r\n\tflats: [],\r\n\tselectedFlat: null,\r\n\tclientList: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_STREETS':\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase 'SET_HOUSES':\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase 'SET_FLATS':\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase 'SET_SELECTED_FLAT':\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase 'SET_CLIENT_LIST':\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducer';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}