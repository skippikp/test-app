{"version":3,"sources":["services/test-api.js","constants/constants.js","actions/actions.js","components/person-info/PersonInfo.js","components/SelectComponent/SelectComponent.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/app/App.js","reducers/reducer.js","index.js"],"names":["TestApi","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","removePerson","bindId","delete","SET_STREETS","SET_HOUSES","SET_FLATS","SET_SELECTED_FLAT","SET_CLIENT_LIST","setClientList","clientList","type","test","mapDispatchToProps","connect","selectedFlat","name","phone","email","initialState","Id","Name","Phone","Email","BindId","useState","open","setOpen","setPerson","handleClose","then","className","Card","sx","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","label","m","width","onChange","event","state","target","value","variant","DialogActions","submitPerson","SelectComponent","onOpen","loading","onSelect","renderOptions","Autocomplete","isOptionEqualToValue","option","renderOption","props","key","renderInput","params","setHouses","houses","setFlats","flats","setSelectedFlat","flat","setAllStreets","streets","street","setStreet","house","setHouse","setFlat","streetsSearchOptions","map","item","housesSearchOptions","flatsSearchOptions","typeName","streetsLoadingIndicator","length","housesLoadingIndicator","flatsLoadingIndicator","Stack","direction","spacing","streetName","find","loadHouses","houseName","selectedHouse","loadFlats","style","fontWeight","position","top","right","disabled","required","result","App","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac31362b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t'https://dispex.org/api/vtest/HousingStock/clients?addressId=' + adressId\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst res = await axios.delete(\r\n\t\t\t`https://dispex.org/api/vtest/HousingStock/bind_client/${bindId}`\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n}\r\n","export const SET_STREETS = 'SET_STREETS';\r\nexport const SET_HOUSES = 'SET_HOUSES';\r\nexport const SET_FLATS = 'SET_FLATS';\r\nexport const SET_SELECTED_FLAT = 'SET_SELECTED_FLAT';\r\nexport const SET_CLIENT_LIST = 'SET_CLIENT_LIST';\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_CLIENT_LIST,\r\n} from '../constants/constants';\r\n\r\nconst setAllStreets = (streets) => {\r\n\treturn { type: SET_STREETS, streets: streets };\r\n};\r\nconst setHouses = (houses) => {\r\n\treturn { type: SET_HOUSES, houses: houses };\r\n};\r\nconst setFlats = (flats) => {\r\n\treturn { type: SET_FLATS, flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: SET_SELECTED_FLAT, selectedFlat: flat };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: SET_CLIENT_LIST, clientList: clientList };\r\n};\r\n\r\nexport { setAllStreets, setHouses, setFlats, setSelectedFlat, setClientList };\r\n","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport './PersonInfo.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst PersonInfo = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\tbindId,\r\n\tselectedFlat,\r\n\tsetClientList,\r\n}) => {\r\n\tconst initialState = {\r\n\t\tId: 0,\r\n\t\tName: name,\r\n\t\tPhone: phone,\r\n\t\tEmail: email,\r\n\t\tBindId: 0,\r\n\t};\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState(initialState);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetPerson(initialState);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '') {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t\t{phone}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t\t{email}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => removePerson(bindId)}>\r\n\t\t\t\t\t\tУдалить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Имя\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={() => submitPerson(person)}>Изменить</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonInfo);\r\n","import React from 'react';\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nconst SelectComponent = ({\r\n\tonOpen,\r\n\tloading,\r\n\toptions,\r\n\tonSelect,\r\n\trenderOptions,\r\n\tlabel,\r\n\tvalue,\r\n}) => {\r\n\tconst componentRenderOptions = (props, options) => {\r\n\t\treturn (\r\n\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t{options.label}\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tid=\"select-component\"\r\n\t\t\tonOpen={onOpen}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event, value) => {\r\n\t\t\t\tonSelect(value);\r\n\t\t\t}}\r\n\t\t\tisOptionEqualToValue={(option, value) =>\r\n\t\t\t\toption.label === value || option.label === value.label\r\n\t\t\t}\r\n\t\t\tloading={loading}\r\n\t\t\toptions={options}\r\n\t\t\tsx={{ width: 300 }}\r\n\t\t\trenderOption={renderOptions ? renderOptions : componentRenderOptions}\r\n\t\t\trenderInput={(params) => <TextField {...params} label={label} />}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectComponent;\r\n","import React from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport PersonInfo from '../person-info/PersonInfo';\r\nimport { Stack } from '@mui/material';\r\nimport SelectComponent from '../SelectComponent/SelectComponent';\r\nimport {\r\n\tsetHouses,\r\n\tsetFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n} from '../../actions/actions';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\n\r\nconst test = new TestApi();\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetHouses,\r\n\tflats,\r\n\tsetFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n}) => {\r\n\tconst [street, setStreet] = useState('');\r\n\tconst [house, setHouse] = useState('');\r\n\tconst [flat, setFlat] = useState('');\r\n\r\n\tconst loadStreets = () => {\r\n\t\ttest.getStreets().then((data) => {\r\n\t\t\tsetAllStreets(data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadHouses = (streetName) => {\r\n\t\tconst street = streets.find((item) => item.name === streetName);\r\n\t\tif (street) {\r\n\t\t\ttest.getHouses(street.id).then((data) => {\r\n\t\t\t\tsetHouses(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\tif (adressId) {\r\n\t\t\ttest.getAllTenants(adressId).then((res) => {\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadFlats = (houseName) => {\r\n\t\tconst selectedHouse = houses.find((item) => item.name === houseName);\r\n\r\n\t\tif (selectedHouse) {\r\n\t\t\ttest.getFlats(selectedHouse.id).then((data) => {\r\n\t\t\t\tsetFlats(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectHouse = (house) => {\r\n\t\tsetHouse(house?.label);\r\n\t\tsetSelectedFlat(null);\r\n\t\tsetFlat('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectStreet = (street) => {\r\n\t\tsetStreet(street?.label);\r\n\t\tsetSelectedFlat(null);\r\n\t\tsetFlat('');\r\n\t\tsetHouse('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectFlat = (flat) => {\r\n\t\tconst selectedFlat = flats?.find((item) => item.name === flat.label);\r\n\t\tsetSelectedFlat(selectedFlat);\r\n\t\tsetFlat(flat.label);\r\n\t\tshowAllPeople(selectedFlat?.id);\r\n\t\tif (!selectedFlat) {\r\n\t\t\tsetClientList([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst streetsSearchOptions = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst housesSearchOptions = houses.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst flatsSearchOptions = flats.map((item) => {\r\n\t\treturn { label: item.name, typeName: item.typeName, id: item.id };\r\n\t});\r\n\r\n\tconst streetsLoadingIndicator = streets.length === 0;\r\n\tconst housesLoadingIndicator = houses.length === 0;\r\n\tconst flatsLoadingIndicator = flats.length === 0;\r\n\r\n\tconst flatsRenderOptions = (props, options) => {\r\n\t\tif (options.typeName === 'Квартира') {\r\n\t\t\treturn (\r\n\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t{options.label}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={loadStreets}\r\n\t\t\t\t\tloading={streetsLoadingIndicator}\r\n\t\t\t\t\toptions={streetsSearchOptions}\r\n\t\t\t\t\tonSelect={selectStreet}\r\n\t\t\t\t\tlabel={'Улица'}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={() => loadHouses(street)}\r\n\t\t\t\t\tloading={housesLoadingIndicator}\r\n\t\t\t\t\toptions={housesSearchOptions}\r\n\t\t\t\t\tonSelect={selectHouse}\r\n\t\t\t\t\tlabel={'Дом'}\r\n\t\t\t\t\tvalue={house}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={() => loadFlats(house)}\r\n\t\t\t\t\tloading={flatsLoadingIndicator}\r\n\t\t\t\t\toptions={flatsSearchOptions}\r\n\t\t\t\t\tonSelect={selectFlat}\r\n\t\t\t\t\trenderOptions={flatsRenderOptions}\r\n\t\t\t\t\tlabel={'Квартира'}\r\n\t\t\t\t\tvalue={flat}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<h4\r\n\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t>{`Жильцы ${street} ${house} квартира: ${selectedFlat.name} :`}</h4>\r\n\t\t\t) : null}\r\n\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t{clientList.map(({ name, phone, email, bindId }, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PersonInfo\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tbindId={bindId}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tphone={phone}\r\n\t\t\t\t\t\t\temail={email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tstreets,\r\n\thouses,\r\n\tflats,\r\n\tselectedFlat,\r\n\tclientList,\r\n}) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t\tselectedFlat,\r\n\t\tclientList,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetHouses,\r\n\tsetFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst AddPersonModal = ({ selectedFlat, setClientList }) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then((result) => {\r\n\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t});\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest.bindPerson(adressId, personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\tsx={{ position: 'absolute', top: 30, right: 100 }}\r\n\t\t\t\tdisabled={selectedFlat ? false : true}\r\n\t\t\t>\r\n\t\t\t\tДобавить жильца\r\n\t\t\t</Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Ф.И.О\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Телефон\"\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Phone}\r\n\t\t\t\t\t\tonChange={handleChangePhone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button disabled={!person.Phone} onClick={() => submitPerson(person)}>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React from 'react';\r\nimport Form from '../form/Form';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Form />\r\n\t\t\t<AddPersonModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\nimport {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_CLIENT_LIST,\r\n} from '../constants/constants';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tflats: [],\r\n\tselectedFlat: null,\r\n\tclientList: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STREETS:\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase SET_HOUSES:\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase SET_FLATS:\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase SET_SELECTED_FLAT:\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase SET_CLIENT_LIST:\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducer';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}