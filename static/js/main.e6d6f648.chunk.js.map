{"version":3,"sources":["services/test-api.js","components/SelectComponent/SelectComponent.js","constants/constants.js","actions/actions.js","components/person-info/PersonEditableCard/PersonEditableCard.js","components/person-info/PersoEditDialog/PersonEditDialog.js","components/person-info/PersonInfoContainer.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/app/App.js","reducers/reducer.js","index.js"],"names":["TestApi","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","removePerson","bindId","delete","SelectComponent","onOpen","loading","onChange","renderOptions","label","value","Autocomplete","event","isOptionEqualToValue","option","sx","width","renderOption","props","key","renderInput","params","TextField","SET_STREETS","SET_HOUSES","SET_FLATS","SET_SELECTED_FLAT","SET_CLIENT_LIST","setClientList","clientList","type","PersonEditableCard","name","phone","email","handleEdit","handleRemove","Card","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","PersonEditDialog","open","handleClose","handleChangeName","handleChangeEmail","handleSubmit","Dialog","onClose","DialogTitle","DialogContent","m","Name","variant","Email","DialogActions","test","mapDispatchToProps","connect","selectedFlat","initialState","Id","Phone","BindId","useState","setOpen","setPerson","className","then","state","target","setAllHouses","houses","setAllFlats","flats","setSelectedFlat","flat","setAllStreets","streets","street","setStreet","house","setHouse","flatNumber","setFlatNumber","streetsSearchOptions","map","item","housesSearchOptions","flatsSearchOptions","typeName","streetsLoadingIndicator","length","housesLoadingIndicator","flatsLoadingIndicator","Stack","direction","spacing","loadHouses","loadFlats","style","fontWeight","position","top","right","disabled","required","result","submitPerson","App","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d6f648.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t'https://dispex.org/api/vtest/HousingStock/clients?addressId=' + adressId\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst res = await axios.delete(\r\n\t\t\t`https://dispex.org/api/vtest/HousingStock/bind_client/${bindId}`\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n}\r\n","import React from 'react';\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nconst SelectComponent = ({\r\n\tonOpen,\r\n\tloading,\r\n\toptions,\r\n\tonChange,\r\n\trenderOptions,\r\n\tlabel,\r\n\tvalue,\r\n}) => {\r\n\tconst componentRenderOptions = (props, options) => {\r\n\t\treturn (\r\n\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t{options.label}\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tid=\"select-component\"\r\n\t\t\tonOpen={onOpen}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event, value) => {\r\n\t\t\t\tonChange(value);\r\n\t\t\t}}\r\n\t\t\tisOptionEqualToValue={(option, value) =>\r\n\t\t\t\toption.label === value || option.label === value?.label\r\n\t\t\t}\r\n\t\t\tloading={loading}\r\n\t\t\toptions={options}\r\n\t\t\tsx={{ width: 300 }}\r\n\t\t\trenderOption={renderOptions ? renderOptions : componentRenderOptions}\r\n\t\t\trenderInput={(params) => <TextField {...params} label={label} />}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectComponent;\r\n","export const SET_STREETS = 'SET_STREETS';\r\nexport const SET_HOUSES = 'SET_HOUSES';\r\nexport const SET_FLATS = 'SET_FLATS';\r\nexport const SET_SELECTED_FLAT = 'SET_SELECTED_FLAT';\r\nexport const SET_CLIENT_LIST = 'SET_CLIENT_LIST';\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_CLIENT_LIST,\r\n} from '../constants/constants';\r\n\r\nconst setAllStreets = (streets) => {\r\n\treturn { type: SET_STREETS, streets: streets };\r\n};\r\nconst setAllHouses = (houses) => {\r\n\treturn { type: SET_HOUSES, houses: houses };\r\n};\r\nconst setAllFlats = (flats) => {\r\n\treturn { type: SET_FLATS, flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: SET_SELECTED_FLAT, selectedFlat: flat };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: SET_CLIENT_LIST, clientList: clientList };\r\n};\r\n\r\nexport {\r\n\tsetAllStreets,\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n};\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst PersonEditableCard = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\thandleEdit,\r\n\thandleRemove,\r\n}) => {\r\n\treturn (\r\n\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t{phone}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t{email}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button size=\"small\" onClick={handleEdit}>\r\n\t\t\t\t\tРедактировать\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" onClick={handleRemove}>\r\n\t\t\t\t\tУдалить\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PersonEditableCard;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst PersonEditDialog = ({\r\n\tperson,\r\n\topen,\r\n\thandleClose,\r\n\thandleChangeName,\r\n\thandleChangeEmail,\r\n\thandleSubmit,\r\n}) => {\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>Изменить данные жильца</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\tlabel=\"Имя\"\r\n\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t<Button onClick={() => handleSubmit(person)}>Изменить</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default PersonEditDialog;\r\n","import React, { useState } from 'react';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport PersonEditableCard from './PersonEditableCard/PersonEditableCard';\r\nimport PersonEditDialog from './PersoEditDialog/PersonEditDialog';\r\n\r\nconst test = new TestApi();\r\n\r\nconst PersonInfoСardContainer = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\tbindId,\r\n\tselectedFlat,\r\n\tsetClientList,\r\n}) => {\r\n\tconst initialState = {\r\n\t\tId: 0,\r\n\t\tName: name,\r\n\t\tPhone: phone,\r\n\t\tEmail: email,\r\n\t\tBindId: 0,\r\n\t};\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState(initialState);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleEdit = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetPerson(initialState);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '') {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<PersonEditableCard\r\n\t\t\t\tname={name}\r\n\t\t\t\tphone={phone}\r\n\t\t\t\temail={email}\r\n\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\thandleRemove={() => removePerson(bindId)}\r\n\t\t\t/>\r\n\t\t\t<PersonEditDialog\r\n\t\t\t\tperson={person}\r\n\t\t\t\topen={open}\r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\thandleChangeName={handleChangeName}\r\n\t\t\t\thandleChangeEmail={handleChangeEmail}\r\n\t\t\t\thandleSubmit={submitPerson}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PersonInfoСardContainer);\r\n","import React from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport { Stack } from '@mui/material';\r\nimport SelectComponent from '../SelectComponent/SelectComponent';\r\nimport {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n} from '../../actions/actions';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\nimport PersonInfoCardContainer from '../person-info/PersonInfoContainer';\r\n\r\nconst test = new TestApi();\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetAllHouses,\r\n\tflats,\r\n\tsetAllFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n}) => {\r\n\tconst [street, setStreet] = useState('');\r\n\tconst [house, setHouse] = useState('');\r\n\tconst [flatNumber, setFlatNumber] = useState('');\r\n\r\n\tconst loadStreets = () => {\r\n\t\ttest.getStreets().then((data) => {\r\n\t\t\tsetAllStreets(data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadHouses = (street) => {\r\n\t\tif (street) {\r\n\t\t\ttest.getHouses(street.id).then((data) => {\r\n\t\t\t\tsetAllHouses(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadFlats = (house) => {\r\n\t\tif (house) {\r\n\t\t\ttest.getFlats(house.id).then((data) => {\r\n\t\t\t\tsetAllFlats(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\tif (adressId) {\r\n\t\t\ttest.getAllTenants(adressId).then((res) => {\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectStreet = (street) => {\r\n\t\tif (street === null) {\r\n\t\t\tsetStreet('');\r\n\t\t} else {\r\n\t\t\tsetStreet(street.label);\r\n\t\t}\r\n\t\tloadHouses(street);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetHouse('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectHouse = (house) => {\r\n\t\tif (house === null) {\r\n\t\t\tsetHouse('');\r\n\t\t} else {\r\n\t\t\tsetHouse(house.label);\r\n\t\t}\r\n\t\tloadFlats(house);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectFlat = (flat) => {\r\n\t\tif (flat === null) {\r\n\t\t\tsetSelectedFlat('');\r\n\t\t\tsetFlatNumber('');\r\n\t\t\tsetClientList([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedFlat(flat);\r\n\t\tsetFlatNumber(flat.label);\r\n\t\tshowAllPeople(flat.id);\r\n\t};\r\n\r\n\tconst streetsSearchOptions = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst housesSearchOptions = houses.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst flatsSearchOptions = flats.map((item) => {\r\n\t\treturn { label: item.name, typeName: item.typeName, id: item.id };\r\n\t});\r\n\r\n\tconst streetsLoadingIndicator = streets.length === 0;\r\n\r\n\tconst housesLoadingIndicator = houses.length === 0;\r\n\r\n\tconst flatsLoadingIndicator = flats.length === 0;\r\n\r\n\tconst flatsRenderOptions = (props, options) => {\r\n\t\tif (options.typeName === 'Квартира') {\r\n\t\t\treturn (\r\n\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t{options.label}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={loadStreets}\r\n\t\t\t\t\tloading={streetsLoadingIndicator}\r\n\t\t\t\t\toptions={streetsSearchOptions}\r\n\t\t\t\t\tonChange={selectStreet}\r\n\t\t\t\t\tlabel={'Улица'}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tloading={housesLoadingIndicator}\r\n\t\t\t\t\toptions={housesSearchOptions}\r\n\t\t\t\t\tonChange={selectHouse}\r\n\t\t\t\t\tlabel={'Дом'}\r\n\t\t\t\t\tvalue={house}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tloading={flatsLoadingIndicator}\r\n\t\t\t\t\toptions={flatsSearchOptions}\r\n\t\t\t\t\tonChange={selectFlat}\r\n\t\t\t\t\trenderOptions={flatsRenderOptions}\r\n\t\t\t\t\tlabel={'Квартира'}\r\n\t\t\t\t\tvalue={flatNumber}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<h4\r\n\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t>{`Жильцы ${street} ${house} квартира: ${selectedFlat.label} :`}</h4>\r\n\t\t\t) : null}\r\n\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t{clientList.map(({ name, phone, email, bindId }, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PersonInfoCardContainer\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tbindId={bindId}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tphone={phone}\r\n\t\t\t\t\t\t\temail={email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tstreets,\r\n\thouses,\r\n\tflats,\r\n\tselectedFlat,\r\n\tclientList,\r\n}) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t\tselectedFlat,\r\n\t\tclientList,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst AddPersonModal = ({ selectedFlat, setClientList }) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then((result) => {\r\n\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t});\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest.bindPerson(adressId, personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\tsx={{ position: 'absolute', top: 30, right: 100 }}\r\n\t\t\t\tdisabled={selectedFlat ? false : true}\r\n\t\t\t>\r\n\t\t\t\tДобавить жильца\r\n\t\t\t</Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Ф.И.О\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Телефон\"\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Phone}\r\n\t\t\t\t\t\tonChange={handleChangePhone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button disabled={!person.Phone} onClick={() => submitPerson(person)}>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React from 'react';\r\nimport Form from '../form/Form';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Form />\r\n\t\t\t<AddPersonModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\nimport {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_CLIENT_LIST,\r\n} from '../constants/constants';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tflats: [],\r\n\tselectedFlat: '',\r\n\tclientList: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STREETS:\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase SET_HOUSES:\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase SET_FLATS:\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase SET_SELECTED_FLAT:\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase SET_CLIENT_LIST:\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducer';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}