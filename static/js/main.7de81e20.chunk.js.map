{"version":3,"sources":["services/test-api.js","actions/actions.js","components/person-info/PersonInfo.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/app/App.js","reducers/reducer.js","index.js"],"names":["TestApi","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","then","console","log","removePerson","bindId","delete","setStreets","streets","type","setHouses","houses","setFlats","flats","setSelectedFlat","flat","selectedFlat","setClientList","clientList","test","connect","state","dispatch","bindActionCreators","actions","name","phone","email","initialState","Id","Name","Phone","Email","BindId","useState","open","setOpen","setPerson","handleClose","className","Card","sx","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","label","onChange","event","target","value","variant","DialogActions","submitPerson","street","setStreet","house","setHouse","useEffect","findHouses","findFlats","streetName","find","item","houseName","selectHouse","selectStreet","selectFlat","searchOption","map","Stack","direction","spacing","Autocomplete","disablePortal","width","renderOption","props","key","renderInput","params","onSelect","typeName","style","fontWeight","position","top","right","disabled","m","required","result","updateStreet","selectedHouse","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7de81e20.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t'https://dispex.org/api/vtest/HousingStock/clients?addressId=' + adressId\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options).then((res) => console.log(res));\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst res = await axios.delete(\r\n\t\t\t`https://dispex.org/api/vtest/HousingStock/bind_client/${bindId}`\r\n\t\t);\r\n\t\treturn res;\r\n\t};\r\n}\r\n","const setStreets = (streets) => {\r\n\treturn { type: 'SET_STREETS', streets: streets };\r\n};\r\nconst setHouses = (houses) => {\r\n\treturn { type: 'SET_HOUSES', houses: houses };\r\n};\r\nconst setFlats = (flats) => {\r\n\treturn { type: 'SET_FLATS', flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: 'SET_SELECTED_FLAT', selectedFlat: flat };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: 'SET_CLIENT_LIST', clientList: clientList };\r\n};\r\n\r\nexport { setStreets, setHouses, setFlats, setSelectedFlat, setClientList };\r\n","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport './PersonInfo.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst PersonInfo = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\tbindId,\r\n\tselectedFlat,\r\n\tsetClientList,\r\n}) => {\r\n\tconst initialState = {\r\n\t\tId: 0,\r\n\t\tName: name,\r\n\t\tPhone: phone,\r\n\t\tEmail: email,\r\n\t\tBindId: 0,\r\n\t};\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState(initialState);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetPerson(initialState);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '') {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t\t{phone}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t\t{email}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => removePerson(bindId)}>\r\n\t\t\t\t\t\tУдалить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={() => submitPerson(person)}>Изменить</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tselectedFlat: state.selectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst { setClientList } = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tsetClientList: (clientList) => setClientList(clientList),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonInfo);\r\n","import React from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport PersonInfo from '../person-info/PersonInfo';\r\nimport { Stack, TextField, Autocomplete } from '@mui/material';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/actions';\r\nimport { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\n\r\nconst test = new TestApi();\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetHouses,\r\n\tflats,\r\n\tsetFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n}) => {\r\n\tconst [street, setStreet] = useState('');\r\n\tconst [house, setHouse] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tfindHouses(street);\r\n\t\tfindFlats(house);\r\n\t}, [street, house]);\r\n\r\n\tconst findHouses = (streetName) => {\r\n\t\tconst street = streets.find((item) => item.name === streetName);\r\n\t\tif (street) {\r\n\t\t\ttest.getHouses(street.id).then((data) => {\r\n\t\t\t\tsetHouses(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\ttest.getAllTenants(adressId).then((res) => {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t} else setClientList([]);\r\n\t\t});\r\n\t};\r\n\r\n\tconst findFlats = (houseName) => {\r\n\t\tconst house = houses.find((item) => item.name === houseName);\r\n\t\tif (house) {\r\n\t\t\ttest.getFlats(house.id).then((data) => {\r\n\t\t\t\tsetFlats(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectHouse = (event) => {\r\n\t\tsetHouse(event.target.value);\r\n\t};\r\n\r\n\tconst selectStreet = (event) => {\r\n\t\tsetStreet(event.target.value);\r\n\t};\r\n\r\n\tconst selectFlat = (event) => {\r\n\t\tconst flat = flats?.find((item) => item.name === event.target.value);\r\n\t\tsetSelectedFlat(flat);\r\n\t\tshowAllPeople(flat?.id);\r\n\t\tif (!flat) {\r\n\t\t\tsetClientList([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst searchOption = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\toptions={searchOption}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectStreet} label=\"Улица\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\toptions={houses.map((item) => {\r\n\t\t\t\t\t\treturn { label: item.name, id: item.id };\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectHouse} label=\"Дом\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tdisablePortal\r\n\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\toptions={flats.map((item) => {\r\n\t\t\t\t\t\treturn { label: item.name, typeName: item.typeName, id: item.id };\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tsx={{ width: 300 }}\r\n\t\t\t\t\trenderOption={(props, options) => {\r\n\t\t\t\t\t\tif (options.typeName === 'Квартира') {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t\t\t\t\t{options.label}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t\t<TextField {...params} onSelect={selectFlat} label=\"Квартира\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<h4\r\n\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t>{`Жильцы ${street} ${house} ${selectedFlat.name} :`}</h4>\r\n\t\t\t) : null}\r\n\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t{clientList.map(({ name, phone, email, bindId }, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PersonInfo\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tbindId={bindId}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tphone={phone}\r\n\t\t\t\t\t\t\temail={email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tstreets: state.streets,\r\n\t\thouses: state.houses,\r\n\t\tflats: state.flats,\r\n\t\tselectedFlat: state.selectedFlat,\r\n\t\tclientList: state.clientList,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst { setHouses, setFlats, setSelectedFlat, setClientList } =\r\n\t\tbindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tsetHouses: (houses) => setHouses(houses),\r\n\t\tsetFlats: (flats) => setFlats(flats),\r\n\t\tsetSelectedFlat: (flat) => setSelectedFlat(flat),\r\n\t\tsetClientList: (clientList) => setClientList(clientList),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/actions';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\n\r\nconst test = new TestApi();\r\n\r\nconst AddPersonModal = ({ selectedFlat, setClientList }) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then((result) => {\r\n\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t});\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest.bindPerson(adressId, personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\tsx={{ position: 'absolute', top: 30, right: 100 }}\r\n\t\t\t\tdisabled={selectedFlat ? false : true}\r\n\t\t\t>\r\n\t\t\t\tДобавить жильца\r\n\t\t\t</Button>\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Ф.И.О\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Телефон\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Phone}\r\n\t\t\t\t\t\tonChange={handleChangePhone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Outlined\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={person.Phone ? false : true}\r\n\t\t\t\t\t\tonClick={() => submitPerson(person)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tselectedFlat: state.selectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst { setClientList } = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tsetClientList: (clientList) => setClientList(clientList),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React, { useEffect } from 'react';\r\nimport TestApi from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../form/Form';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/actions';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\n\r\nconst test = new TestApi();\r\n\r\nconst App = ({ setStreets }) => {\r\n\tuseEffect(() => {\r\n\t\tupdateStreet();\r\n\t}, []);\r\n\r\n\tconst updateStreet = () => {\r\n\t\ttest.getStreets().then((data) => {\r\n\t\t\tsetStreets(data);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Form />\r\n\t\t\t<AddPersonModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tstreets: state.streets,\r\n\t\thouses: state.houses,\r\n\t\tflats: state.flats,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst { setStreets } = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tsetStreets: (streets) => setStreets(streets),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tselectedHouse: null,\r\n\tflats: [],\r\n\tselectedFlat: null,\r\n\tclientList: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_STREETS':\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase 'SET_HOUSES':\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase 'SET_FLATS':\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase 'SET_SELECTED_FLAT':\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase 'SET_CLIENT_LIST':\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducer';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}