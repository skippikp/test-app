{"version":3,"sources":["services/test-api.js","components/select-component/SelectComponent.js","constants/constants.js","actions/actions.js","components/person-info/person-editable-card/PersonEditableCard.js","components/person-info/person-edit-dialog/PersonEditDialog.js","components/person-info/PersonInfoContainer.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/error-boundry/ErrorBoundry.js","components/app/App.js","reducers/reducer.js","store/store.js","index.js"],"names":["test","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","removePerson","bindId","delete","SelectComponent","onOpen","loading","onChange","renderOptions","label","value","Autocomplete","event","isOptionEqualToValue","option","sx","width","renderOption","props","key","renderInput","params","TextField","SET_STREETS","SET_HOUSES","SET_FLATS","SET_SELECTED_FLAT","SET_SELECTED_STREET","SET_CLIENT_LIST","SET_SELECTED_HOUSE","setClientList","clientList","type","PersonEditableCard","name","phone","email","handleEdit","handleRemove","Card","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","PersonEditDialog","open","handleClose","handleChangeName","handleChangeEmail","handleSubmit","Dialog","onClose","DialogTitle","DialogContent","m","Name","variant","Email","DialogActions","mapDispatchToProps","connect","selectedFlat","initialState","Id","Phone","BindId","useState","setOpen","setPerson","className","then","state","target","setAllHouses","houses","setAllFlats","flats","setSelectedFlat","flat","setAllStreets","streets","setSelectedStreet","street","selectedStreet","setSelectedHouse","house","selectedHouse","flatNumber","setFlatNumber","streetsSearchOptions","map","item","housesSearchOptions","flatsSearchOptions","typeName","streetsLoadingIndicator","length","housesLoadingIndicator","flatsLoadingIndicator","Stack","direction","spacing","loadHouses","loadFlats","Fragment","style","fontWeight","handleClickOpen","validPhone","includes","disabled","Tooltip","title","required","pattern","error","result","submitPerson","ErrorBoundry","hasError","this","setState","children","React","Component","App","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15dabd9c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${options.url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst response = await this.getResource(\r\n\t\t\t`/HousingStock/clients?addressId=${adressId}`\r\n\t\t);\r\n\t\treturn response;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${options.url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst url = `${this._apiBase}/HousingStock/bind_client/${bindId}`;\r\n\t\tconst res = await axios.delete(url);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n}\r\n\r\nconst test = new TestApi();\r\n\r\nexport default test;\r\n","import React from 'react';\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nconst SelectComponent = ({\r\n\tonOpen,\r\n\tloading,\r\n\toptions,\r\n\tonChange,\r\n\trenderOptions,\r\n\tlabel,\r\n\tvalue,\r\n}) => {\r\n\tconst componentRenderOptions = (props, options) => {\r\n\t\treturn (\r\n\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t{options.label}\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tid=\"select-component\"\r\n\t\t\tonOpen={onOpen}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event, value) => {\r\n\t\t\t\tonChange(value);\r\n\t\t\t}}\r\n\t\t\tisOptionEqualToValue={(option, value) =>\r\n\t\t\t\toption.label === value || option.label === value?.label\r\n\t\t\t}\r\n\t\t\tloading={loading}\r\n\t\t\toptions={options}\r\n\t\t\tsx={{ width: 300 }}\r\n\t\t\trenderOption={renderOptions ? renderOptions : componentRenderOptions}\r\n\t\t\trenderInput={(params) => <TextField {...params} label={label} />}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectComponent;\r\n","export const SET_STREETS = 'SET_STREETS';\r\nexport const SET_HOUSES = 'SET_HOUSES';\r\nexport const SET_FLATS = 'SET_FLATS';\r\nexport const SET_SELECTED_FLAT = 'SET_SELECTED_FLAT';\r\nexport const SET_SELECTED_STREET = 'SET_SELECTED_STREET';\r\nexport const SET_CLIENT_LIST = 'SET_CLIENT_LIST';\r\nexport const SET_SELECTED_HOUSE = 'SET_SELECTED_HOUSE';\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_SELECTED_STREET,\r\n\tSET_CLIENT_LIST,\r\n\tSET_SELECTED_HOUSE,\r\n} from '../constants/constants';\r\n\r\nconst setAllStreets = (streets) => {\r\n\treturn { type: SET_STREETS, streets: streets };\r\n};\r\nconst setAllHouses = (houses) => {\r\n\treturn { type: SET_HOUSES, houses: houses };\r\n};\r\nconst setAllFlats = (flats) => {\r\n\treturn { type: SET_FLATS, flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: SET_SELECTED_FLAT, selectedFlat: flat };\r\n};\r\nconst setSelectedStreet = (street) => {\r\n\treturn { type: SET_SELECTED_STREET, selectedStreet: street };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: SET_CLIENT_LIST, clientList: clientList };\r\n};\r\nconst setSelectedHouse = (house) => {\r\n\treturn { type: SET_SELECTED_HOUSE, selectedHouse: house };\r\n};\r\n\r\nexport {\r\n\tsetAllStreets,\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetSelectedStreet,\r\n\tsetClientList,\r\n\tsetSelectedHouse,\r\n};\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst PersonEditableCard = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\thandleEdit,\r\n\thandleRemove,\r\n}) => {\r\n\treturn (\r\n\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t{phone}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t{email}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button size=\"small\" onClick={handleEdit}>\r\n\t\t\t\t\tРедактировать\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" onClick={handleRemove}>\r\n\t\t\t\t\tУдалить\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PersonEditableCard;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst PersonEditDialog = ({\r\n\tperson,\r\n\topen,\r\n\thandleClose,\r\n\thandleChangeName,\r\n\thandleChangeEmail,\r\n\thandleSubmit,\r\n}) => {\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>Изменить данные жильца</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\tlabel=\"Имя\"\r\n\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t<Button onClick={() => handleSubmit(person)}>Изменить</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default PersonEditDialog;\r\n","import React, { useState } from 'react';\r\nimport { setClientList } from '../../actions/actions';\r\nimport test from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport PersonEditableCard from './person-editable-card/PersonEditableCard';\r\nimport PersonEditDialog from './person-edit-dialog/PersonEditDialog';\r\n\r\nconst PersonInfoСardContainer = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\tbindId,\r\n\tselectedFlat,\r\n\tsetClientList,\r\n}) => {\r\n\tconst initialState = {\r\n\t\tId: 0,\r\n\t\tName: name,\r\n\t\tPhone: phone,\r\n\t\tEmail: email,\r\n\t\tBindId: 0,\r\n\t};\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState(initialState);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleEdit = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetPerson(initialState);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '') {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<PersonEditableCard\r\n\t\t\t\tname={name}\r\n\t\t\t\tphone={phone}\r\n\t\t\t\temail={email}\r\n\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\thandleRemove={() => removePerson(bindId)}\r\n\t\t\t/>\r\n\t\t\t<PersonEditDialog\r\n\t\t\t\tperson={person}\r\n\t\t\t\topen={open}\r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\thandleChangeName={handleChangeName}\r\n\t\t\t\thandleChangeEmail={handleChangeEmail}\r\n\t\t\t\thandleSubmit={submitPerson}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PersonInfoСardContainer);\r\n","import React from 'react';\r\nimport test from '../../services/test-api';\r\nimport { Stack } from '@mui/material';\r\nimport SelectComponent from '../select-component/SelectComponent';\r\nimport {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tsetSelectedHouse,\r\n} from '../../actions/actions';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\nimport PersonInfoCardContainer from '../person-info/PersonInfoContainer';\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetAllHouses,\r\n\tflats,\r\n\tsetAllFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tselectedStreet,\r\n\tsetSelectedHouse,\r\n\tselectedHouse,\r\n}) => {\r\n\tconst [flatNumber, setFlatNumber] = useState('');\r\n\r\n\tconst loadStreets = () => {\r\n\t\ttest.getStreets().then((data) => {\r\n\t\t\tsetAllStreets(data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadHouses = (street) => {\r\n\t\tif (street) {\r\n\t\t\ttest.getHouses(street.id).then((data) => {\r\n\t\t\t\tsetAllHouses(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadFlats = (house) => {\r\n\t\tif (house) {\r\n\t\t\ttest.getFlats(house.id).then((data) => {\r\n\t\t\t\tsetAllFlats(data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\tif (adressId) {\r\n\t\t\ttest.getAllTenants(adressId).then((res) => {\r\n\t\t\t\tif (res.status !== 200) {\r\n\t\t\t\t\tsetClientList([]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectStreet = (street) => {\r\n\t\tif (street === null) {\r\n\t\t\tsetSelectedStreet('');\r\n\t\t} else {\r\n\t\t\tsetSelectedStreet(street.label);\r\n\t\t}\r\n\t\tloadHouses(street);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetSelectedHouse('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectHouse = (house) => {\r\n\t\tif (house === null) {\r\n\t\t\tsetSelectedHouse('');\r\n\t\t} else {\r\n\t\t\tsetSelectedHouse(house.label);\r\n\t\t}\r\n\t\tloadFlats(house);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectFlat = (flat) => {\r\n\t\tif (flat === null) {\r\n\t\t\tsetSelectedFlat('');\r\n\t\t\tsetFlatNumber('');\r\n\t\t\tsetClientList([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedFlat(flat);\r\n\t\tsetFlatNumber(flat.label);\r\n\t\tshowAllPeople(flat.id);\r\n\t};\r\n\r\n\tconst streetsSearchOptions = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst housesSearchOptions = houses.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst flatsSearchOptions = flats.map((item) => {\r\n\t\treturn { label: item.name, typeName: item.typeName, id: item.id };\r\n\t});\r\n\r\n\tconst streetsLoadingIndicator = streets.length === 0;\r\n\r\n\tconst housesLoadingIndicator = houses.length === 0;\r\n\r\n\tconst flatsLoadingIndicator = flats.length === 0;\r\n\r\n\tconst flatsRenderOptions = (props, options) => {\r\n\t\tif (options.typeName === 'Квартира') {\r\n\t\t\treturn (\r\n\t\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t\t{options.label}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={loadStreets}\r\n\t\t\t\t\tloading={streetsLoadingIndicator}\r\n\t\t\t\t\toptions={streetsSearchOptions}\r\n\t\t\t\t\tonChange={selectStreet}\r\n\t\t\t\t\tlabel={'Улица'}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tloading={housesLoadingIndicator}\r\n\t\t\t\t\toptions={housesSearchOptions}\r\n\t\t\t\t\tonChange={selectHouse}\r\n\t\t\t\t\tlabel={'Дом'}\r\n\t\t\t\t\tvalue={selectedHouse}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tloading={flatsLoadingIndicator}\r\n\t\t\t\t\toptions={flatsSearchOptions}\r\n\t\t\t\t\tonChange={selectFlat}\r\n\t\t\t\t\trenderOptions={flatsRenderOptions}\r\n\t\t\t\t\tlabel={'Квартира'}\r\n\t\t\t\t\tvalue={flatNumber}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h4\r\n\t\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t\t>{`Жильцы ${selectedStreet} ${selectedHouse} квартира: ${selectedFlat.label} :`}</h4>\r\n\t\t\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t\t\t{clientList.map(({ name, phone, email, bindId }, id) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<PersonInfoCardContainer\r\n\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\tbindId={bindId}\r\n\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\tphone={phone}\r\n\t\t\t\t\t\t\t\t\temail={email}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tstreets,\r\n\thouses,\r\n\tflats,\r\n\tselectedFlat,\r\n\tselectedStreet,\r\n\tclientList,\r\n\tselectedHouse,\r\n}) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t\tselectedFlat,\r\n\t\tclientList,\r\n\t\tselectedStreet,\r\n\t\tselectedHouse,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tsetSelectedHouse,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { setClientList } from '../../actions/actions';\r\nimport test from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport { Tooltip } from '@mui/material';\r\nimport './AddPersonModal.css';\r\n\r\nconst AddPersonModal = ({\r\n\tselectedFlat,\r\n\tsetClientList,\r\n\tselectedStreet,\r\n\tselectedHouse,\r\n}) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then((result) => {\r\n\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t});\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest.bindPerson(adressId, personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.status !== 200) {\r\n\t\t\t\t\tsetClientList([]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tsetClientList(res.data);\r\n\t\t});\r\n\t};\r\n\r\n\tconst validPhone = (phone) => {\r\n\t\tconst phoneRegExp = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3,4}\\)?[\\- ]?)?[\\d\\- ]{5,10}$/;\r\n\t\treturn phoneRegExp.test(phone);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"person_modal\">\r\n\t\t\t{selectedStreet !== 'Федюнинского' || !selectedHouse.includes('30') ? (\r\n\t\t\t\t<Tooltip title=\"Вы можете добавлять жильцов только для улицы Федюнинского 30, для всех корпусов\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleClickOpen} disabled>\r\n\t\t\t\t\t\t\tДобавить жильца\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\t\tdisabled={!selectedFlat}\r\n\t\t\t\t>\r\n\t\t\t\t\tДобавить жильца\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t\t<DialogTitle>Добавить жильца</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-name\"\r\n\t\t\t\t\t\tlabel=\"Ф.И.О\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tonChange={handleChangeName}\r\n\t\t\t\t\t\tvalue={person.Name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Телефон\"\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tpattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\terror={!validPhone(person.Phone)}\r\n\t\t\t\t\t\tvalue={person.Phone}\r\n\t\t\t\t\t\tonChange={handleChangePhone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"outlined-basic\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ m: 1, width: '25ch' }}\r\n\t\t\t\t\t\tvalue={person.Email}\r\n\t\t\t\t\t\tonChange={handleChangeEmail}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose}>Cancel</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tdisabled={!person.Phone || !validPhone(person.Phone)}\r\n\t\t\t\t\t\tonClick={() => submitPerson(person)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tДобавить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat, selectedStreet, selectedHouse }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t\tselectedStreet,\r\n\t\tselectedHouse,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React from 'react';\r\nimport './ErrorBoundry.css';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n\tstate = {\r\n\t\thasError: false,\r\n\t};\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t\t<h2>Sorry</h2>\r\n\t\t\t\t\t<h3>something goes wrong</h3>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport Form from '../form/Form';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\nimport ErrorBoundry from '../error-boundry/ErrorBoundry';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t\t<Form />\r\n\t\t\t\t<AddPersonModal />\r\n\t\t\t</ErrorBoundry>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_SELECTED_STREET,\r\n\tSET_CLIENT_LIST,\r\n\tSET_SELECTED_HOUSE,\r\n} from '../constants/constants';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tflats: [],\r\n\tselectedFlat: '',\r\n\tclientList: [],\r\n\tselectedStreet: '',\r\n\tselectedHouse: '',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STREETS:\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase SET_HOUSES:\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase SET_FLATS:\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase SET_SELECTED_FLAT:\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase SET_SELECTED_HOUSE:\r\n\t\t\treturn { ...state, selectedHouse: action.selectedHouse };\r\n\t\tcase SET_CLIENT_LIST:\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tcase SET_SELECTED_STREET:\r\n\t\t\treturn { ...state, selectedStreet: action.selectedStreet };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from '../src/store/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}