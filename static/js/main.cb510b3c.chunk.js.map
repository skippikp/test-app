{"version":3,"sources":["services/test-api.js","components/select-component/SelectComponent.js","constants/constants.js","actions/actions.js","components/person-info/person-editable-card/PersonEditableCard.js","components/modal-form/ModalForm.js","components/person-info/PersonInfoContainer.js","components/form/Form.js","components/add-person-modal/AddPersonModal.js","components/error-boundry/ErrorBoundry.js","components/app/App.js","reducers/reducer.js","store/store.js","index.js"],"names":["test","_apiBase","getResource","url","a","axios","get","response","status","Error","getStreets","res","data","getHouses","id","getFlats","postPerson","person","options","method","headers","accept","getAllTenants","adressId","bindPerson","personId","AddressId","ClientId","removePerson","bindId","delete","SelectComponent","onOpen","loading","onChange","label","renderOptions","value","Autocomplete","event","isOptionEqualToValue","option","sx","width","renderOption","props","key","renderInput","params","TextField","SET_STREETS","SET_HOUSES","SET_FLATS","SET_SELECTED_FLAT","SET_SELECTED_STREET","SET_CLIENT_LIST","SET_SELECTED_HOUSE","setClientList","clientList","type","PersonEditableCard","name","phone","email","handleEdit","handleRemove","Card","minWidth","maxWidth","minHeight","CardContent","Typography","fontSize","color","gutterBottom","mb","CardActions","Button","size","onClick","ModalForm","open","onClose","title","disabled","handleSubmit","submitButtonName","inputs","Dialog","DialogTitle","DialogContent","map","inputProps","DialogActions","mapDispatchToProps","connect","selectedFlat","useState","setOpen","editedPerson","setEditedPerson","editPersonInputsProps","m","state","target","variant","className","then","submitPerson","setAllHouses","houses","setAllFlats","flats","setSelectedFlat","flat","setAllStreets","streets","setSelectedStreet","street","selectedStreet","setSelectedHouse","house","selectedHouse","flatNumber","setFlatNumber","streetsSearchOptions","item","housesSearchOptions","flatsSearchOptions","Stack","direction","spacing","catch","err","console","log","length","loadHouses","flatsOnly","filter","typeName","loadFlats","Fragment","style","fontWeight","Id","Name","Phone","Email","BindId","setPerson","result","handleClickOpen","validPhone","addPersonModalInputsProps","required","error","includes","Tooltip","ErrorBoundry","hasError","this","setState","children","React","Component","App","initialState","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb510b3c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass TestApi {\r\n\t_apiBase = 'https://dispex.org/api/vtest';\r\n\r\n\tgetResource = async (url) => {\r\n\t\tconst response = await axios.get(`${this._apiBase}${url}`);\r\n\r\n\t\tif (response.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${response.status}`);\r\n\t\t}\r\n\r\n\t\treturn await response;\r\n\t};\r\n\r\n\tgetStreets = async () => {\r\n\t\tconst res = await this.getResource('/Request/streets');\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetHouses = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/houses/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tgetFlats = async (id) => {\r\n\t\tconst res = await this.getResource(`/Request/house_flats/${id}`);\r\n\t\treturn res.data;\r\n\t};\r\n\r\n\tpostPerson = async (person) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: 'text/plain' },\r\n\t\t\tdata: person,\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${options.url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tgetAllTenants = async (adressId) => {\r\n\t\tconst response = await this.getResource(\r\n\t\t\t`/HousingStock/clients?addressId=${adressId}`\r\n\t\t);\r\n\t\treturn response;\r\n\t};\r\n\r\n\tbindPerson = async (adressId, personId) => {\r\n\t\tconst options = {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: { 'Content-Type': 'text/json', accept: '*/*' },\r\n\t\t\tdata: { AddressId: adressId, ClientId: personId },\r\n\t\t\turl: 'https://dispex.org/api/vtest/HousingStock/bind_client',\r\n\t\t};\r\n\t\tconst res = await axios(options);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${options.url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n\r\n\tremovePerson = async (bindId) => {\r\n\t\tconst url = `${this._apiBase}/HousingStock/bind_client/${bindId}`;\r\n\t\tconst res = await axios.delete(url);\r\n\r\n\t\tif (res.status >= 400) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t};\r\n}\r\n\r\nconst test = new TestApi();\r\n\r\nexport default test;\r\n","import React from 'react';\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nconst SelectComponent = ({\r\n\tonOpen,\r\n\tloading,\r\n\toptions,\r\n\tonChange,\r\n\trenderOptions,\r\n\tlabel,\r\n\tvalue,\r\n}) => {\r\n\tconst componentRenderOptions = (props, options) => {\r\n\t\treturn (\r\n\t\t\t<li {...props} key={options.id}>\r\n\t\t\t\t{options.label}\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tid=\"select-component\"\r\n\t\t\tonOpen={onOpen}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event, value) => {\r\n\t\t\t\tonChange(value);\r\n\t\t\t}}\r\n\t\t\tisOptionEqualToValue={(option, value) =>\r\n\t\t\t\toption.label === value || option.label === value?.label\r\n\t\t\t}\r\n\t\t\tloading={loading}\r\n\t\t\toptions={options}\r\n\t\t\tsx={{ width: 300 }}\r\n\t\t\trenderOption={componentRenderOptions}\r\n\t\t\trenderInput={(params) => <TextField {...params} label={label} />}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SelectComponent;\r\n","export const SET_STREETS = 'SET_STREETS';\r\nexport const SET_HOUSES = 'SET_HOUSES';\r\nexport const SET_FLATS = 'SET_FLATS';\r\nexport const SET_SELECTED_FLAT = 'SET_SELECTED_FLAT';\r\nexport const SET_SELECTED_STREET = 'SET_SELECTED_STREET';\r\nexport const SET_CLIENT_LIST = 'SET_CLIENT_LIST';\r\nexport const SET_SELECTED_HOUSE = 'SET_SELECTED_HOUSE';\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_SELECTED_STREET,\r\n\tSET_CLIENT_LIST,\r\n\tSET_SELECTED_HOUSE,\r\n} from '../constants/constants';\r\n\r\nconst setAllStreets = (streets) => {\r\n\treturn { type: SET_STREETS, streets: streets };\r\n};\r\nconst setAllHouses = (houses) => {\r\n\treturn { type: SET_HOUSES, houses: houses };\r\n};\r\nconst setAllFlats = (flats) => {\r\n\treturn { type: SET_FLATS, flats: flats };\r\n};\r\nconst setSelectedFlat = (flat) => {\r\n\treturn { type: SET_SELECTED_FLAT, selectedFlat: flat };\r\n};\r\nconst setSelectedStreet = (street) => {\r\n\treturn { type: SET_SELECTED_STREET, selectedStreet: street };\r\n};\r\nconst setClientList = (clientList) => {\r\n\treturn { type: SET_CLIENT_LIST, clientList: clientList };\r\n};\r\nconst setSelectedHouse = (house) => {\r\n\treturn { type: SET_SELECTED_HOUSE, selectedHouse: house };\r\n};\r\n\r\nexport {\r\n\tsetAllStreets,\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetSelectedStreet,\r\n\tsetClientList,\r\n\tsetSelectedHouse,\r\n};\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst PersonEditableCard = ({\r\n\tname,\r\n\tphone,\r\n\temail,\r\n\thandleEdit,\r\n\thandleRemove,\r\n}) => {\r\n\treturn (\r\n\t\t<Card sx={{ minWidth: 275, maxWidth: 500, minHeight: 200 }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ fontSize: 20 }} color=\"green\">\r\n\t\t\t\t\t{phone}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n\t\t\t\t\t{email}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button size=\"small\" onClick={handleEdit}>\r\n\t\t\t\t\tРедактировать\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" onClick={handleRemove}>\r\n\t\t\t\t\tУдалить\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default PersonEditableCard;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst ModalForm = ({\r\n\topen,\r\n\tonClose,\r\n\ttitle,\r\n\tdisabled,\r\n\thandleSubmit,\r\n\tsubmitButtonName,\r\n\tinputs,\r\n}) => {\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={onClose}>\r\n\t\t\t<DialogTitle>{title}</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t{inputs.map((inputProps, id) => {\r\n\t\t\t\t\treturn <TextField key={id} {...inputProps} />;\r\n\t\t\t\t})}\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={onClose}>Отмена</Button>\r\n\t\t\t\t<Button disabled={disabled} onClick={handleSubmit}>\r\n\t\t\t\t\t{submitButtonName}\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { useState } from 'react';\r\nimport { setClientList } from '../../actions/actions';\r\nimport test from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport PersonEditableCard from './person-editable-card/PersonEditableCard';\r\nimport ModalForm from '../modal-form/ModalForm';\r\n\r\nconst PersonInfoСardContainer = ({ person, selectedFlat, setClientList }) => {\r\n\tconst { name, phone, email, bindId } = person;\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [editedPerson, setEditedPerson] = useState(person);\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetEditedPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tname: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetEditedPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\temail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\tsetClientList(res.data);\r\n\t\t\t} else setClientList([]);\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleEdit = () => {\r\n\t\tsetOpen(true);\r\n\t\tsetEditedPerson(person);\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest.postPerson(person).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst removePerson = (personId) => {\r\n\t\ttest.removePerson(personId).then(() => {\r\n\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tconst editPersonInputsProps = [\r\n\t\t{\r\n\t\t\tid: 'outlined-name',\r\n\t\t\tlabel: 'Имя',\r\n\t\t\tsx: { m: 1, width: '25ch' },\r\n\t\t\tonChange: handleChangeName,\r\n\t\t\tvalue: editedPerson.name,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'outlined-basic',\r\n\t\t\tlabel: 'Email',\r\n\t\t\tsx: { m: 1, width: '25ch' },\r\n\t\t\tvariant: 'outlined',\r\n\t\t\tvalue: editedPerson.email,\r\n\t\t\tonChange: handleChangeEmail,\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"personInfo\">\r\n\t\t\t<PersonEditableCard\r\n\t\t\t\tname={name}\r\n\t\t\t\tphone={phone}\r\n\t\t\t\temail={email}\r\n\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\thandleRemove={() => removePerson(bindId)}\r\n\t\t\t/>\r\n\t\t\t<ModalForm\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\ttitle={'Изменить данные жильца'}\r\n\t\t\t\tdisabled={false}\r\n\t\t\t\tsubmitButtonName={'Изменить'}\r\n\t\t\t\thandleSubmit={() => submitPerson(editedPerson)}\r\n\t\t\t\tinputs={editPersonInputsProps}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PersonInfoСardContainer);\r\n","import React from 'react';\r\nimport test from '../../services/test-api';\r\nimport { Stack } from '@mui/material';\r\nimport SelectComponent from '../select-component/SelectComponent';\r\nimport {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tsetSelectedHouse,\r\n} from '../../actions/actions';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Form.css';\r\nimport PersonInfoCardContainer from '../person-info/PersonInfoContainer';\r\n\r\nconst Form = ({\r\n\tstreets,\r\n\thouses,\r\n\tsetAllHouses,\r\n\tflats,\r\n\tsetAllFlats,\r\n\tselectedFlat,\r\n\tsetSelectedFlat,\r\n\tclientList,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tselectedStreet,\r\n\tsetSelectedHouse,\r\n\tselectedHouse,\r\n}) => {\r\n\tconst [flatNumber, setFlatNumber] = useState('');\r\n\r\n\tconst loadStreets = () => {\r\n\t\ttest\r\n\t\t\t.getStreets()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetAllStreets(data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t};\r\n\r\n\tconst loadHouses = (street) => {\r\n\t\tif (street) {\r\n\t\t\ttest\r\n\t\t\t\t.getHouses(street.id)\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetAllHouses(data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadFlats = (house) => {\r\n\t\tif (house) {\r\n\t\t\ttest\r\n\t\t\t\t.getFlats(house.id)\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconst flatsOnly = data.filter((item) => item.typeName === 'Квартира');\r\n\t\t\t\t\tsetAllFlats(flatsOnly);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t\t}\r\n\t};\r\n\r\n\tconst showAllPeople = (adressId) => {\r\n\t\tif (adressId) {\r\n\t\t\ttest\r\n\t\t\t\t.getAllTenants(adressId)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t\t} else setClientList([]);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectStreet = (street) => {\r\n\t\tif (street === null) {\r\n\t\t\tsetSelectedStreet('');\r\n\t\t} else {\r\n\t\t\tsetSelectedStreet(street.label);\r\n\t\t}\r\n\t\tloadHouses(street);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetSelectedHouse('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectHouse = (house) => {\r\n\t\tif (house === null) {\r\n\t\t\tsetSelectedHouse('');\r\n\t\t} else {\r\n\t\t\tsetSelectedHouse(house.label);\r\n\t\t}\r\n\t\tloadFlats(house);\r\n\t\tsetSelectedFlat('');\r\n\t\tsetFlatNumber('');\r\n\t\tsetClientList([]);\r\n\t};\r\n\r\n\tconst selectFlat = (flat) => {\r\n\t\tif (flat === null) {\r\n\t\t\tsetSelectedFlat('');\r\n\t\t\tsetFlatNumber('');\r\n\t\t\tsetClientList([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedFlat(flat);\r\n\t\tsetFlatNumber(flat.label);\r\n\t\tshowAllPeople(flat.id);\r\n\t};\r\n\r\n\tconst streetsSearchOptions = streets.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst housesSearchOptions = houses.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\tconst flatsSearchOptions = flats.map((item) => {\r\n\t\treturn { label: item.name, id: item.id };\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"form\">\r\n\t\t\t<Stack direction=\"row\" spacing={2}>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\tonOpen={loadStreets}\r\n\t\t\t\t\tloading={streets.length === 0}\r\n\t\t\t\t\toptions={streetsSearchOptions}\r\n\t\t\t\t\tonChange={selectStreet}\r\n\t\t\t\t\tlabel={'Улица'}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\toptions={housesSearchOptions}\r\n\t\t\t\t\tonChange={selectHouse}\r\n\t\t\t\t\tlabel={'Дом'}\r\n\t\t\t\t\tvalue={selectedHouse}\r\n\t\t\t\t/>\r\n\t\t\t\t<SelectComponent\r\n\t\t\t\t\toptions={flatsSearchOptions}\r\n\t\t\t\t\tonChange={selectFlat}\r\n\t\t\t\t\tlabel={'Квартира'}\r\n\t\t\t\t\tvalue={flatNumber}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t\t{selectedFlat ? (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h4\r\n\t\t\t\t\t\tstyle={{ fontWeight: 500, fontSize: 20 }}\r\n\t\t\t\t\t>{`Жильцы ${selectedStreet} ${selectedHouse} квартира: ${selectedFlat.label} :`}</h4>\r\n\t\t\t\t\t<div className=\"personInfo\">\r\n\t\t\t\t\t\t{clientList.map((person, id) => {\r\n\t\t\t\t\t\t\treturn <PersonInfoCardContainer key={id} person={person} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tstreets,\r\n\thouses,\r\n\tflats,\r\n\tselectedFlat,\r\n\tselectedStreet,\r\n\tclientList,\r\n\tselectedHouse,\r\n}) => {\r\n\treturn {\r\n\t\tstreets,\r\n\t\thouses,\r\n\t\tflats,\r\n\t\tselectedFlat,\r\n\t\tclientList,\r\n\t\tselectedStreet,\r\n\t\tselectedHouse,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetAllHouses,\r\n\tsetAllFlats,\r\n\tsetSelectedFlat,\r\n\tsetClientList,\r\n\tsetAllStreets,\r\n\tsetSelectedStreet,\r\n\tsetSelectedHouse,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { setClientList } from '../../actions/actions';\r\nimport test from '../../services/test-api';\r\nimport { connect } from 'react-redux';\r\nimport { Tooltip } from '@mui/material';\r\nimport './AddPersonModal.css';\r\nimport ModalForm from '../modal-form/ModalForm';\r\n\r\nconst AddPersonModal = ({\r\n\tselectedFlat,\r\n\tsetClientList,\r\n\tselectedStreet,\r\n\tselectedHouse,\r\n}) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [person, setPerson] = useState({\r\n\t\tId: 0,\r\n\t\tName: '',\r\n\t\tPhone: '',\r\n\t\tEmail: '',\r\n\t\tBindId: 0,\r\n\t});\r\n\r\n\tconst handleChangeName = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tName: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangePhone = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn { ...state, Phone: event.target.value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleChangeEmail = (event) => {\r\n\t\tsetPerson((state) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tEmail: event.target.value,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst bindPerson = (adressId, personId) => {\r\n\t\ttest\r\n\t\t\t.bindPerson(adressId, personId)\r\n\t\t\t.then(() => {\r\n\t\t\t\ttest.getAllTenants(selectedFlat.id).then((res) => {\r\n\t\t\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t\t} else setClientList([]);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t};\r\n\r\n\tconst submitPerson = (person) => {\r\n\t\ttest\r\n\t\t\t.postPerson(person)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tbindPerson(selectedFlat.id, result.data.id);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t\tsetPerson({\r\n\t\t\tId: 0,\r\n\t\t\tName: '',\r\n\t\t\tPhone: '',\r\n\t\t\tEmail: '',\r\n\t\t\tBindId: 0,\r\n\t\t});\r\n\t\ttest\r\n\t\t\t.getAllTenants(selectedFlat.id)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data !== '' && res.status === 200) {\r\n\t\t\t\t\tsetClientList(res.data);\r\n\t\t\t\t} else setClientList([]);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log('Не удается загрузить данные ' + err));\r\n\t};\r\n\r\n\tconst validPhone = (phone) => {\r\n\t\t// eslint-disable-next-line no-useless-escape\r\n\t\tconst phoneRegExp = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3,4}\\)?[\\- ]?)?[\\d\\- ]{5,10}$/;\r\n\t\treturn phoneRegExp.test(phone);\r\n\t};\r\n\r\n\tconst addPersonModalInputsProps = [\r\n\t\t{\r\n\t\t\tid: 'outlined-name',\r\n\t\t\tlabel: 'Ф.И.О',\r\n\t\t\tsx: { m: 1, width: '25ch' },\r\n\t\t\tonChange: handleChangeName,\r\n\t\t\tvalue: person.Name,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'outlined-basic',\r\n\t\t\tlabel: 'Телефон',\r\n\t\t\ttype: 'tel',\r\n\t\t\trequired: true,\r\n\t\t\tvariant: 'outlined',\r\n\t\t\tsx: { m: 1, width: '25ch' },\r\n\t\t\terror: !validPhone(person.Phone),\r\n\t\t\tvalue: person.Phone,\r\n\t\t\tonChange: handleChangePhone,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'outlined-basic',\r\n\t\t\tlabel: 'Email',\r\n\t\t\tvariant: 'outlined',\r\n\t\t\tsx: { m: 1, width: '25ch' },\r\n\t\t\tvalue: person.Email,\r\n\t\t\tonChange: handleChangeEmail,\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"person_modal\">\r\n\t\t\t{selectedStreet !== 'Федюнинского' || !selectedHouse.includes('30') ? (\r\n\t\t\t\t<Tooltip title=\"Вы можете добавлять жильцов только для улицы Федюнинского 30, для всех корпусов\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleClickOpen} disabled>\r\n\t\t\t\t\t\t\tДобавить жильца\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t) : (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\t\tdisabled={!selectedFlat}\r\n\t\t\t\t>\r\n\t\t\t\t\tДобавить жильца\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t\t<ModalForm\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\ttitle={'Добавить жильца'}\r\n\t\t\t\tdisabled={!person.Phone || !validPhone(person.Phone)}\r\n\t\t\t\thandleSubmit={() => submitPerson(person)}\r\n\t\t\t\tsubmitButtonName={'Добавить'}\r\n\t\t\t\tinputs={addPersonModalInputsProps}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ selectedFlat, selectedStreet, selectedHouse }) => {\r\n\treturn {\r\n\t\tselectedFlat,\r\n\t\tselectedStreet,\r\n\t\tselectedHouse,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetClientList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPersonModal);\r\n","import React from 'react';\r\nimport './ErrorBoundry.css';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n\tstate = {\r\n\t\thasError: false,\r\n\t};\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t\t<h2>Sorry</h2>\r\n\t\t\t\t\t<h3>something goes wrong</h3>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport Form from '../form/Form';\r\nimport './App.css';\r\nimport AddPersonModal from '../add-person-modal/AddPersonModal';\r\nimport ErrorBoundry from '../error-boundry/ErrorBoundry';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t\t<Form />\r\n\t\t\t\t<AddPersonModal />\r\n\t\t\t</ErrorBoundry>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import {\r\n\tSET_STREETS,\r\n\tSET_HOUSES,\r\n\tSET_FLATS,\r\n\tSET_SELECTED_FLAT,\r\n\tSET_SELECTED_STREET,\r\n\tSET_CLIENT_LIST,\r\n\tSET_SELECTED_HOUSE,\r\n} from '../constants/constants';\r\n\r\nconst initialState = {\r\n\tstreets: [],\r\n\thouses: [],\r\n\tflats: [],\r\n\tselectedFlat: '',\r\n\tclientList: [],\r\n\tselectedStreet: '',\r\n\tselectedHouse: '',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STREETS:\r\n\t\t\treturn { ...state, streets: action.streets };\r\n\t\tcase SET_HOUSES:\r\n\t\t\treturn { ...state, houses: action.houses };\r\n\t\tcase SET_FLATS:\r\n\t\t\treturn { ...state, flats: action.flats };\r\n\t\tcase SET_SELECTED_FLAT:\r\n\t\t\treturn { ...state, selectedFlat: action.selectedFlat };\r\n\t\tcase SET_SELECTED_HOUSE:\r\n\t\t\treturn { ...state, selectedHouse: action.selectedHouse };\r\n\t\tcase SET_CLIENT_LIST:\r\n\t\t\treturn { ...state, clientList: action.clientList };\r\n\t\tcase SET_SELECTED_STREET:\r\n\t\t\treturn { ...state, selectedStreet: action.selectedStreet };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport { Provider } from 'react-redux';\nimport store from '../src/store/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}